(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{296:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"sample"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sample"}},[e._v("#")]),e._v(" Sample")]),e._v(" "),a("p",[e._v("We've included a sample ASP.NET Core project, and backend console app to show interop with the backplane. The only thing needed is RabbitMQ. I'd recommend using their "),a("a",{attrs:{href:"https://store.docker.com/community/images/library/rabbitmq",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker image"),a("OutboundLink")],1),e._v(" to spin up the broker.")]),e._v(" "),a("h2",{attrs:{id:"masstransit-signalr-sample"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#masstransit-signalr-sample"}},[e._v("#")]),e._v(" MassTransit.SignalR.Sample")]),e._v(" "),a("p",[e._v("This "),a("a",{attrs:{href:"https://github.com/aspnet/SignalR-samples/tree/master/ChatSample",target:"_blank",rel:"noopener noreferrer"}},[e._v("chat sample"),a("OutboundLink")],1),e._v(" was used, which is nearly identical to the "),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/aspnet/core/tutorials/signalr?view=aspnetcore-2.2&tabs=visual-studio",target:"_blank",rel:"noopener noreferrer"}},[e._v("tutorial here"),a("OutboundLink")],1),e._v(", except the only different is it's stripped down to the bare minimum (no razor Pages, bootstrap or jquery libraries).")]),e._v(" "),a("p",[e._v('The other difference is the javascript client callback method name is "ReceiveMessage" versus "broadcastMessage", but both samples are nearly the same. and the hub route is /chat versus /chatHub.')]),e._v(" "),a("p",[e._v("The other addition we added is in the Properties/launchSettings.json, which lets us start 2 profiles on different ports. Then helps simulate horizontal scaling.")]),e._v(" "),a("h3",{attrs:{id:"dotnet-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dotnet-run"}},[e._v("#")]),e._v(" Dotnet Run")]),e._v(" "),a("p",[e._v("You can simulate scaleout by running the two profiles.")]),e._v(" "),a("div",{staticClass:"language-cmd extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> cd (your path to MassTransit clone)\\src\\MassTransit.SignalR.Sample\n> dotnet run --launch-profile sample1\n> dotnet run --launch-profile sample2\n")])])]),a("p",[e._v("Now in two browser tabs, open up in each:\nhttp://localhost:5100\nhttp://localhost:5200")]),e._v(" "),a("p",[e._v("Then you can type a message in each, and see them show up in the other. The backplane works!!")]),e._v(" "),a("h2",{attrs:{id:"masstransit-signalr-sampleconsole"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#masstransit-signalr-sampleconsole"}},[e._v("#")]),e._v(" MassTransit.SignalR.SampleConsole")]),e._v(" "),a("p",[e._v("If you have some backend services (console apps, or Mt Topshelf consumers), you might want to notify users/groups of things that have happened in realtime. You can do this by running this console app.")]),e._v(" "),a("div",{staticClass:"language-cmd extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> cd (your path to MassTransit clone)\\src\\MassTransit.SignalR.SampleConsole\n> dotnet run\n")])])]),a("p",[e._v("An type in a message to broadcast to all connections. You will see the message in your browsers chat messages")])])}),[],!1,null,null,null);t.default=n.exports}}]);