(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{274:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),s("p",[t._v("Getting started with MassTransit is fast and easy. This quick start guide uses RabbitMQ with .NET Core. RabbitMQ must be installed, instructions for installing RabbitMQ are included "),s("a",{attrs:{href:"#install-rabbitmq"}},[t._v("below")]),t._v(".")]),t._v(" "),s("blockquote",[s("p",[t._v("The "),s("a",{attrs:{href:"https://dotnet.microsoft.com/download",target:"_blank",rel:"noopener noreferrer"}},[t._v(".NET Core SDK"),s("OutboundLink")],1),t._v(" should be installed before continuing.")])]),t._v(" "),s("p",[t._v("To create a service using MassTransit, create a console application via the Command Prompt.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ mkdir GettingStarted\n$ dotnet new console -o GettingStarted\n")])])]),s("p",[t._v("Add some references to the newly created console application:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ cd GettingStarted\n$ dotnet add package MassTransit.RabbitMQ\n")])])]),s("p",[t._v("At this point, the project should compile, but there is more work to be done. You can verify the project builds by executing:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ dotnet run\n")])])]),s("p",[t._v("If you have any errors at this point, you might want to get them resolved.")]),t._v(" "),s("h3",{attrs:{id:"edit-program-cs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#edit-program-cs"}},[t._v("#")]),t._v(" Edit Program.cs")]),t._v(" "),s("blockquote",[s("p",[t._v("You can view a working project on "),s("a",{attrs:{href:"https://github.com/MassTransit/Sample-ConsoleService",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),s("OutboundLink")],1),t._v(". There are other "),s("a",{attrs:{href:"/learn/samples"}},[t._v("samples")]),t._v(" available as well.")])]),t._v(" "),s("p",[t._v("To get started, a bare bones "),s("em",[t._v("Program.cs")]),t._v(" is shown below.")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),t._v(" Text "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Program")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Task")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Bus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateUsingRabbitMq")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sbc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            sbc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rabbitmq://localhost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            sbc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReceiveEndpoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test_queue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                ep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Handler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLineAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Received: {context.Message.Text}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" bus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StartAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is important!")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" bus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Publish")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Press any key to exit"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReadKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" bus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StopAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Save the file, and execute "),s("em",[t._v("dotnet run")]),t._v(", and you should see the message "),s("em",[t._v("Received: Hi")]),t._v(" displayed. If you see anything else, something went wrong. Verify your RabbitMQ installation and your .NET Core setup, basically all the things that could possibly go wrong you should fix.")]),t._v(" "),s("h3",{attrs:{id:"install-rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-rabbitmq"}},[t._v("#")]),t._v(" Install RabbitMQ")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("If you are using a Mac, RabbitMQ can be installed using "),s("a",{attrs:{href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Homebrew"),s("OutboundLink")],1),t._v(" by typing "),s("code",[t._v("brew install rabbitmq")]),t._v(". This installs the management plug-in automatically.")])]),t._v(" "),s("h4",{attrs:{id:"to-install-rabbitmq-manually"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#to-install-rabbitmq-manually"}},[t._v("#")]),t._v(" To install RabbitMQ manually:")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("Install Erlang")]),t._v(" using the "),s("a",{attrs:{href:"http://www.erlang.org/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("installer"),s("OutboundLink")],1),t._v(". (Next -> Next ...)")]),t._v(" "),s("li",[s("strong",[t._v("Install RabbitMQ")]),t._v(" using the "),s("a",{attrs:{href:"http://www.rabbitmq.com/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("installer"),s("OutboundLink")],1),t._v(". (Next -> Next ...) You now have a RabbitMQ broker (look in "),s("code",[t._v("services.msc")]),t._v(" for it) that you can "),s("a",{attrs:{href:"http://localhost:15672/#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("log into"),s("OutboundLink")],1),t._v(" using "),s("code",[t._v("guest")]),t._v(", "),s("code",[t._v("guest")]),t._v(". You can see message rates, routings and active consumers using this interface.")])]),t._v(" "),s("h5",{attrs:{id:"you-need-to-add-the-management-interface-before-you-can-login"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#you-need-to-add-the-management-interface-before-you-can-login"}},[t._v("#")]),t._v(" You need to add the management interface before you can login.")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("First, from an elevated command prompt, change directory to the sbin folder within the RabbitMQ Server installation directory e.g. "),s("code",[t._v("%PROGRAMFILES%\\RabbitMQ Server\\rabbitmq_server_3.5.3\\sbin\\")])])]),t._v(" "),s("li",[s("p",[t._v("Next, run the following command to enable the rabbitmq management plugin: "),s("code",[t._v("rabbitmq-plugins.bat enable rabbitmq_management")])])])]),t._v(" "),s("h3",{attrs:{id:"what-is-this-doing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-this-doing"}},[t._v("#")]),t._v(" What is this doing?")]),t._v(" "),s("p",[t._v("If we are going to create a messaging system, we need to create a message. "),s("code",[t._v("Message")]),t._v(" is a .NET class that will represent our message. Notice that it's just a Plain Old CLR Object (or POCO).")]),t._v(" "),s("p",[t._v("Next up, we need a program to run our code. Here we have a standard issue command line "),s("code",[t._v("Main")]),t._v(" method. To setup the bus we start with the static class "),s("code",[t._v("Bus")]),t._v(" and work off of the "),s("code",[t._v("Factory")]),t._v(" extension point. From there we call the "),s("code",[t._v("CreateUsingRabbitMQ")]),t._v(" method to setup a RabbitMQ bus instance. This method takes a lambda whose first and only argument is a class that will let you configure every aspect of the bus.")]),t._v(" "),s("p",[t._v('One of your first decisions is going to be "What transport do I want to run on?" Here we have chosen RabbitMQ ('),s("code",[t._v("Bus.Factory.CreateUsingRabbitMQ()")]),t._v(") because its the defacto transport choice for MassTransit.")]),t._v(" "),s("p",[t._v("After that we need to configure the RabbitMQ host settings "),s("code",[t._v("sbc.Host()")]),t._v(". The first argument sets the machine name and the virtual directory to connect to. After that you have a lambda that you can use to tweak any of the other settings that you want. Since no additional configuration is specified, the default username and password (guest/guest) is being used.")]),t._v(" "),s("p",[t._v("Now that we have a host to listen on, we can configure some receiving endpoints "),s("code",[t._v("sbc.ReceiveEndpoint")]),t._v(". We specifiy the queue we want to listen on and a lambda to register each handler that we want to use.")]),t._v(" "),s("p",[t._v("Lastly, in the configuration, we have the "),s("code",[t._v("Handler<Message>")]),t._v(" method which subscribes a handler for the message type "),s("code",[t._v("Message")]),t._v(" and takes an "),s("code",[t._v("async")]),t._v(" lambda (oh yeah baby TPL) that is given a context class to process. Here we access the message by traversing "),s("code",[t._v("context.Message")]),t._v(" and then writing to the console the text of the message.")]),t._v(" "),s("p",[t._v("And now we have a bus instance that is fully configured and can start processing messages. We can grab the "),s("code",[t._v("busControl")]),t._v(" that we created and call "),s("code",[t._v("StartAsync")]),t._v(" on it to get everything rolling. We again "),s("code",[t._v("await")]),t._v(" on the result and now we can go.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("IMPORTANT")]),t._v(" "),s("p",[t._v("You "),s("em",[t._v("must")]),t._v(' start the bus, otherwise you will get issues with sending and receiving messages. There is no "send-only" bus with MassTransit.')])]),t._v(" "),s("p",[t._v("We can call the "),s("code",[t._v("Publish")]),t._v(" method on the "),s("code",[t._v("busControl")]),t._v(" and we should see our console write the output.")])])}),[],!1,null,null,null);a.default=n.exports}}]);